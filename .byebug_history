continue
e
continue
e
continue
success
continue
order_service.create!
exit
current_user.blank?
if current_user.blank?
next
current_user
exit
@current_user
line_items
amount_paid
Order.create(user: @current_user,
                            amount_paid: amount_paid)
exit
shipment_params.merge(status: 'completed')
exit
shipment_params
exit
params.require(:shipment).permit(:customer_name, :shipping_address, :phone_number, :payment_method, :order_id)
params.require(:shipment).permit!(:customer_name, :shipping_address, :phone_number, :payment_method, :order_id)
params.require(:shipment).permit!(:customer_name, :shipping_address, :phone_number, :payment_method, order_id)
params
exit
@shipment.user.full_name
@shipment.user
@shipment
exit
Order.create(user: @current_user,
                            amount_paid: amount_paid)
exit
Order.create(user: @current_user,
                            amount_paid: amount_paid)
Order.create(user: @current_user,
   16:                             amount_paid: amount_paid)
exit
c.quantity > c.product.quantity
c.quantity
exit
OrderItem.find_by(product_id: product_1.id, order_id: order.id)w
OrderItem.find_by(product_id: product_1.id)
OrderItem.find_by(product: product_1)
OrderItem.find_by(order: order, product: product_1)
OrderItem.find_by(order: order, product: product_1
order
product_1
OrderItem.all
OrderItem.last
OrderOrder.last
exit
(product_1.price * 2 + product_2.price).to_f
product_1.price * 2 + product_2.price).to_f
order.amount_paid
exit
params.permit(:name, :description, :price, :quantity, images: [])
params[:name]
params
exit
@cart_items.find { |item| item.product == @products.first }.quantity
@cart_items.find { |item| item.product == product }.quantity
@cart_items.find { |item| item.product === @products.first }
@cart_items.find { |item| item.product === @product.first }
@cart_items
@products
exit
exiy
@products
@products = Product.where(id: @cart_items.select(:product_id))
@cart_items
exit
next
@cart_items.destroy_all
@cart_items
result
next
exit
@order_items
exit
build_order_items
@order_items
exit
@cart_items.first.product
@cart_items
exit
line_item
exit
line_items
exit
line_items
exit
line_items
current_user
line_items
params
exit
line_items
params
cart
exit
line_items.inject(0) { |total, item| total + item[:amount] }
sum = 0
    line_items.each do |item|
      sum += item[:amount]
    end
    sum
sum = 0
    line_items.each do |item|
      sum += item[:amount]
    end
sum = 0
    line_items.each do |item|
      sum += item.amount
    end
line_items.eachline_items.sum do |item|
      item.amount
    end
line_items
exit
current_user
line_items
params
line_items
params
exit
params["cart_item"]["product_id"]
params["cart_item"]
params
prams
params
params["product_id"]
params
prams
product_id
